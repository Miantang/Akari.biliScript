
/* Namespace: Akari
 * Contains several namespace level functions.
 */
Akari = {};

/* Function: execute
 * Sets off the helper script running.
 *
 * mainComp
 *   The MainComposition of the Comment Art to present.
 */
Akari.execute = function( mainComp )
{
  // Create a global reference so that the main composition could be accessed in Expressions
  Global._set( "__mainComp_akari", mainComp );
  
  // Present the main composition
  mainComp.present();
  
  // Set global value to indicate usage
  Global._set( "__isExecuted_akari", true );
};

/* Function: stop
 * Stops the helper for debug use
 */
Akari.stop = function()
{
  if ( Akari.isExecuted() )
  {
    ( Global._get("__mainComp_akari") ).detach();
    Global._set( "__mainComp_akari", null );
    Global._set( "__isExecuted_akari", null );
  }
};

/* Function: isExecuted
 * See if the helper is already running
 */
Akari.isExecuted = function()
{
  return ( Global._get("__isExecuted_akari") === true );
};

/* Property: root
 * A safe replacement for $.root in case it get banned
 */
Akari.root = function()
{
  if( $.hasOwnProperty("root") && $.root )
  {
    return $.root;
  }
  else
  {
    var sprite = $.createCanvas(
    {
      lifeTime : 810114514
    });

    ScriptManager.popEl( sprite );
    
    // remove 3D to make it clear by default
    sprite.transform.matrix3D = null;
    
    return sprite;
  }
}();

////#IF (IST DEBUG)

Akari.performanceDisplay = function()
{
  var perfMon = $.createComment( "", { lifeTime : 1, fontsize : 12, color : 0xFFFFFF } );
  ScriptManager.popEl( perfMon );
  perfMon.transform.matrix3D = null;
  return perfMon;
}();

////#ENDIF